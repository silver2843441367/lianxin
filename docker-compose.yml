version: '3.8'

services:
  user-service:
    build:
      context: ./services/user-service
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=${PORT:-3001}
      - DB_HOST=mysql
      - DB_PORT=${DB_PORT:-3306}
      - DB_NAME=${DB_NAME:-lianxin_dev}
      - DB_USER=${DB_USER:-root}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - JWT_ACCESS_TOKEN_SECRET=${JWT_ACCESS_TOKEN_SECRET}
      - JWT_REFRESH_TOKEN_SECRET=${JWT_REFRESH_TOKEN_SECRET}
      - ENCRYPTION_PRIMARY_KEY=${ENCRYPTION_PRIMARY_KEY}
      - ENCRYPTION_SECONDARY_KEY=${ENCRYPTION_SECONDARY_KEY}
      - ALIBABA_SMS_ACCESS_KEY_ID=${ALIBABA_SMS_ACCESS_KEY_ID}
      - ALIBABA_SMS_ACCESS_KEY_SECRET=${ALIBABA_SMS_ACCESS_KEY_SECRET}
      - ALIBABA_SMS_SIGN_NAME=${ALIBABA_SMS_SIGN_NAME:-Lianxin}
      - ALIBABA_SMS_TEMPLATE_REGISTRATION=${ALIBABA_SMS_TEMPLATE_REGISTRATION:-SMS_001}
      - ALIBABA_SMS_TEMPLATE_LOGIN=${ALIBABA_SMS_TEMPLATE_LOGIN:-SMS_002}
      - ALIBABA_SMS_TEMPLATE_PASSWORD_RESET=${ALIBABA_SMS_TEMPLATE_PASSWORD_RESET:-SMS_003}
      - ALIBABA_SMS_TEMPLATE_PHONE_CHANGE=${ALIBABA_SMS_TEMPLATE_PHONE_CHANGE:-SMS_004}
      - CLOUD_STORAGE_BASE_URL=${CLOUD_STORAGE_BASE_URL:-https://cdn.lianxin.com}
      - CLOUD_STORAGE_BUCKET=${CLOUD_STORAGE_BUCKET:-lianxin-assets}
      - CLOUD_STORAGE_REGION=${CLOUD_STORAGE_REGION:-cn-hangzhou}
      - CLOUD_STORAGE_ACCESS_KEY_ID=${CLOUD_STORAGE_ACCESS_KEY_ID}
      - CLOUD_STORAGE_ACCESS_KEY_SECRET=${CLOUD_STORAGE_ACCESS_KEY_SECRET}
    depends_on:
      - mysql
      - redis
    networks:
      - app-network
    volumes:
      - ./services/user-service/logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME:-lianxin_dev}
      MYSQL_USER: ${DB_USER:-root}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./db/migrations:/docker-entrypoint-initdb.d
    networks:
      - app-network
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  redis:
    image: redis:6.0-alpine
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  adminer:
    image: adminer
    ports:
      - "8080:8080"
    networks:
      - app-network
    depends_on:
      - mysql
    restart: unless-stopped

volumes:
  mysql_data:
  redis_data:

networks:
  app-network:
    driver: bridge